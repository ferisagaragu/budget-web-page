{"version":3,"sources":["core/enums/form-regist-reducer.enum.ts","imports/react-redux.import.js","shared/redux-form/redux-render-fields.shared.tsx","core/enums/form-login-reducer.enum.ts","modules/login/form-regist/form-regist.component.tsx","core/enums/user-data-reducer.enum.ts","modules/login/form-login/form-login.component.tsx","core/http/petition.ts","core/models/user-data.model.ts","declarations/redux.declarations.ts","core/reducers/user-data.reducers.ts","declarations/fontawesome.declarations.ts","config/app.config.js","shared/firebase/firebase.shared.ts","core/http/user.service.ts","shared/swal/swal.shared.ts","core/actions/user-data.actions.ts","shared/loading-indicator/loading-indicator.tsx","core/enums/form-recover-password-reducer.enum.ts","shared/modal/modal.component.tsx","core/enums/form-create-budget-reducer.enum.ts","modules/login/form-recover-password/form-recover-password.component.tsx","modules/login/login.view.tsx","modules/header/header.view.tsx","modules/home/card-budget/card-budget.component.tsx","modules/home/form-create-budget/form-create-budget.component.tsx","modules/home/add-budget/add-budget.component.tsx","modules/home/home.view.tsx","modules/app.tsx","serviceWorker.ts","index.tsx"],"names":["FormRegistReducerEnum","Provider","react_redux","connect","reducerForm","_reducer","Field","_field","reduxForm","_reduxForm","_SubmissionError","renderTextField","metaData","input","label","type","className","onKeyUp","meta","error","warning","touched","errorClass","placeholder","renderImageTextField","img","imgClassName","Row","Col","md","alt","src","FormLoginReducerEnum","FormRegistComponent","props","state","this","handleSubmit","cancel","submitting","submitActions","showButtons","onSubmit","icon","size","name","component","evt","setState","target","value","Button","onClick","variant","disabled","Component","form","FORM_REGIST_SUBMIT","validate","values","errors","email","password","UserDataReducerEnum","FormLoginComponent","recoverPassword","href","FORM_LOGIN_SUBMIT","PetitionService","baseUrl","headers","localStorage","getItem","url","onSuccess","onError","fetch","method","then","response","ok","json","data","catch","errorCallback","params","body","JSON","stringify","UserDataModel","uid","photo","Object","assign","reducers","combineReducers","userData","action","SET_USER_DATA","payload","statusLogin","SET_STATUS_LOGIN","icons","faPlusCircle","faAddressCard","faAddressBook","faTimes","faUserCircle","faUserPlus","faUndo","faSpinner","faSignOutAlt","faCalculator","faFileInvoice","faTrash","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","library","add","Firebase","onRegist","errorCode","errorMessage","auth","createUserWithEmailAndPassword","code","message","onAuthStateChanged","user","signOut","onLogIn","signInWithEmailAndPassword","onSendMail","sendPasswordResetEmail","onSignIn","provider","GoogleAuthProvider","signInWithPopup","result","token","credential","accessToken","onSignOut","path","onFunction","database","ref","child","on","snapshot","once","errorFunction","remove","update","set","UserService","petition","val","userDataFinal","Cookies","toString","includes","swal","withReactContent","Swal","toast","iconType","title","mixin","position","showConfirmButton","timer","fire","alert","text","userService","setUserData","setLoginStatus","login","dispatch","a","FormRecoverPasswordReducerEnum","LoadingIndicatorComponent","color","spin","ModalComponent","modalShow","onHide","Modal","show","Header","closeButton","Title","id","Body","ModalCenteredComponent","centered","FormCreateBudgetReducerEnum","FormRecoverPasswordComponent","FORM_RECOVER_PASSWORD_SUBMIT","LoginView","showRegist","showRecover","formData","registerUser","Container","recoverPasswordModal","Card","showRegistModel","userRegist","sendMail","HeaderView","logout","CardBudgetComponent","Subtitle","Text","FormCreateBudgetComponent","FORM_CREATE_BUDGET_SUBMIT","example","AddBudgetComponent","showModal","HomeView","App","getJSON","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b98a35ed.chunk.js","sourcesContent":["export enum FormRegistReducerEnum {\r\n  FORM_REGIST_SUBMIT = 'formRegistSubmit'\r\n}","import * as react_redux from 'react-redux';\nimport {\n  reducer as _reducer,\n  Field as _field,\n  reduxForm as _reduxForm,\n  SubmissionError as _SubmissionError\n} from 'redux-form';\n\nexport const { Provider, connect } = react_redux;\nexport const reducerForm = _reducer;\nexport const Field = _field;\nexport const reduxForm = _reduxForm;\nexport const SubmissionError = _SubmissionError;","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport '../../styles/stylesheet/form.css';\r\n\r\nexport const renderTextField = (metaData: any) => {\r\n  const {\r\n    input,\r\n    label,\r\n    type,\r\n    className,\r\n    onKeyUp,\r\n    meta: {\r\n      error,\r\n      warning,\r\n      touched\r\n    }\r\n  } = metaData;\r\n\r\n  const errorClass = touched && error ? 'error' : '';\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label>\r\n        <b>\r\n          { label }\r\n        </b>\r\n      </label>\r\n      <div>\r\n        <input\r\n          className={ `${className} ${errorClass}` }\r\n          { ...input }\r\n          placeholder={ label }\r\n          type={ type }\r\n          onKeyUp={ onKeyUp }\r\n        />\r\n        {\r\n          touched &&\r\n            ((error && <div className=\"text-danger\">{ error }</div>) ||\r\n            (warning && <div>{ warning }</div>))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderImageTextField = (metaData: any) => {\r\n  const {\r\n    input,\r\n    label,\r\n    type,\r\n    className,\r\n    onKeyUp,\r\n    meta: {\r\n      error,\r\n      warning,\r\n      touched\r\n    },\r\n    img,\r\n    imgClassName\r\n  } = metaData;\r\n\r\n  const errorClass = touched && error ? 'error' : '';\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label>\r\n        <b>\r\n          { label }\r\n        </b>\r\n      </label>\r\n      <Row>\r\n        <Col md={ 2 }>\r\n          <img \r\n            className={ imgClassName ? imgClassName : 'img-field' }\r\n            alt=\"ImageTextField\" \r\n            src={ img ? img : 'https://www.oatey.com/ASSETS/WEB_THEMES//OATEY/images/NoImage.png' } \r\n          />\r\n        </Col>\r\n\r\n        <Col md={ 10 }>\r\n          <input\r\n            className={ `${className} ${errorClass}` }\r\n            { ...input }\r\n            placeholder={ label }\r\n            type={ type }\r\n            onKeyUp={ onKeyUp }\r\n          />\r\n          {\r\n            touched &&\r\n              ((error && <div className=\"text-danger\">{ error }</div>) ||\r\n              (warning && <div>{ warning }</div>))\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderTextArea = (metaData: any) => {\r\n  const {\r\n    input,\r\n    label,\r\n    className,\r\n    meta: {\r\n      error,\r\n      warning,\r\n      touched\r\n    }\r\n  } = metaData;\r\n\r\n  const errorClass = touched && error ? 'error' : '';\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label>\r\n        <b>\r\n          { label }\r\n        </b>\r\n      </label>\r\n      <div>\r\n        <textarea\r\n          className={ `${className} ${errorClass}` }\r\n          {...input}\r\n          placeholder={ label }\r\n        />\r\n        {\r\n          touched &&\r\n            ((error && <div className=\"text-danger\">{ error }</div>) ||\r\n            (warning && <div>{ warning }</div>))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const renderCheckBox = (metaData: any) => {\r\n  const {\r\n    input,\r\n    label,\r\n    type,\r\n    className,\r\n    meta: {\r\n      error,\r\n      warning,\r\n      touched\r\n    }\r\n  } = metaData;\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input\r\n          className={ className }\r\n          {...input}\r\n          type={type}\r\n        />\r\n        &nbsp;&nbsp;&nbsp;&nbsp;{ label }\r\n      </label>\r\n      <br />\r\n      {\r\n        touched &&\r\n          ((error && <div className=\"text-danger\">{ error }</div>) ||\r\n          (warning && <div>{ warning }</div>))\r\n      }\r\n    </div>\r\n  );\r\n};","export enum FormLoginReducerEnum {\r\n  FORM_LOGIN_SUBMIT = 'formLoginSubmit'\r\n}","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from '../../../imports/react-redux.import';\r\nimport { renderTextField, renderImageTextField } from '../../../shared/redux-form/redux-render-fields.shared';\r\nimport { FormRegistReducerEnum } from '../../../core/enums/form-regist-reducer.enum';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './form-regist.css';\r\n\r\ninterface Props { \r\n  initialValues: any;\r\n  handleSubmit: any;\r\n  cancel: any;\r\n  submitting: any;\r\n  submitActions: Function;\r\n  showButtons: boolean;\r\n}\r\n\r\ninterface State { \r\n  img: string;\r\n}\r\n\r\nclass FormRegistComponent extends Component<Props, State> {\r\n  \r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      img: ''\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { handleSubmit, cancel, submitting, submitActions, showButtons } = this.props;\r\n    const { img } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={ handleSubmit(submitActions) }>\r\n        <Row>\r\n          <Col md={ 12 } className=\"text-center mb-3\">\r\n            <FontAwesomeIcon icon=\"user-plus\" size=\"6x\" />\r\n          </Col>\r\n        </Row>\r\n                \r\n        <Field \r\n          className=\"form-control\"\r\n          name=\"img\"\r\n          type=\"text\"\r\n          img={ img }\r\n          component={ renderImageTextField }\r\n          label=\"Imagen de usuario\"\r\n          onKeyUp={ (evt: any) => this.setState({ img: evt.target.value }) }\r\n        />\r\n\r\n        <Field \r\n          className=\"form-control\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          component={ renderTextField }\r\n          label=\"Nombre de usuario\"\r\n        />\r\n\r\n        <Field \r\n          className=\"form-control\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={ renderTextField }\r\n          label=\"Correo\"\r\n        />\r\n\r\n        <Field \r\n          className=\"form-control\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          component={ renderTextField }\r\n          label=\"Contraseña\"\r\n        />\r\n\r\n        {\r\n          showButtons &&\r\n            <div className=\"text-center mt-4\">\r\n              <Button \r\n                className=\"mr-3\"\r\n                onClick={ cancel }\r\n                variant=\"danger\"\r\n              >\r\n                <FontAwesomeIcon icon=\"times\" />\r\n                &nbsp;\r\n                Cancelar\r\n              </Button>\r\n\r\n              <Button \r\n                type=\"submit\"\r\n                disabled={ submitting }\r\n              >\r\n                <FontAwesomeIcon icon=\"address-book\" />\r\n                &nbsp;\r\n                Registrar\r\n              </Button>\r\n            </div>\r\n        }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (values: any) => {\r\n  const errors = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    img: ''\r\n  }\r\n\r\n  if (!values.img) {\r\n    errors.img = 'La imagen es requerida';\r\n  }\r\n\r\n  if (!values.name) {\r\n    errors.name = 'El nombre es requerido';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'El correo es requerido';\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = 'La contraseña es requerida';\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default reduxForm({\r\n  form: FormRegistReducerEnum.FORM_REGIST_SUBMIT,\r\n  validate\r\n})(FormRegistComponent);","export enum UserDataReducerEnum {\r\n  SET_USER_DATA = 'setUserData',\r\n  SET_STATUS_LOGIN = 'setStatusLogin',\r\n  SET_NOTIFICATIONS = 'setNotifications'\r\n}","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from '../../../imports/react-redux.import';\r\nimport { renderTextField } from '../../../shared/redux-form/redux-render-fields.shared';\r\nimport { FormLoginReducerEnum } from '../../../core/enums/form-login-reducer.enum';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './form-login.css';\r\n\r\ninterface Props { \r\n  initialValues: any;\r\n  handleSubmit: any;\r\n  cancel: any;\r\n  submitting: any;\r\n  submitActions: Function;\r\n  recoverPassword: Function;\r\n  showButtons: boolean;\r\n}\r\n\r\ninterface State { }\r\n\r\nclass FormLoginComponent extends Component<Props, State> {\r\n  render() {\r\n    const { \r\n      handleSubmit, \r\n      cancel, \r\n      submitting, \r\n      submitActions, \r\n      showButtons, \r\n      recoverPassword \r\n    } = this.props;\r\n    \r\n    return (\r\n      <form onSubmit={ handleSubmit(submitActions) }>\r\n        <Row>\r\n          <Col md={ 12 } className=\"text-center mb-3\">\r\n            <FontAwesomeIcon icon=\"user-circle\" size=\"6x\" />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Field \r\n          className=\"form-control\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={ renderTextField }\r\n          label=\"Nombre de usuario\"\r\n        />\r\n\r\n        <Field \r\n          className=\"form-control\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          component={ renderTextField }\r\n          label=\"Contraseña\"\r\n        />\r\n\r\n        <Row>\r\n          <Col md={ 12 } className=\"text-center mb-3\">\r\n            <a href=\"/#\" onClick={ () => recoverPassword() }>¿Has olvidado tu contraseña?</a>\r\n          </Col>\r\n        </Row>\r\n\r\n        {\r\n          showButtons &&\r\n            <div className=\"text-center mt-4\">\r\n              <Button \r\n                className=\"mr-3\"\r\n                onClick={ cancel }\r\n              >\r\n                <FontAwesomeIcon icon=\"plus-circle\" />\r\n                &nbsp;\r\n                Registrar\r\n              </Button>\r\n\r\n              <Button \r\n                type=\"submit\"\r\n                variant=\"success\" \r\n                disabled={ submitting }\r\n              >\r\n                <FontAwesomeIcon icon=\"address-card\" />\r\n                &nbsp;\r\n                Entrar\r\n              </Button>\r\n            </div>\r\n        }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (values: any) => {\r\n  const errors = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  \r\n  if (!values.email) {\r\n    errors.email = 'El nombre de usuario es requerido';\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = 'La contraseña es requerida';\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default reduxForm({\r\n  form: FormLoginReducerEnum.FORM_LOGIN_SUBMIT,\r\n  validate\r\n})(FormLoginComponent);","class PetitionService { \r\n\r\n  baseUrl: string;\r\n  headers: any;\r\n\r\n  constructor(baseUrl?: string) {\r\n    this.baseUrl = baseUrl ? baseUrl : 'http://localhost:3400';\r\n    this.headers = {\r\n      // 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyRGF0YSI6eyJlbWFpbCI6ImZlcmlzYWdhcmFndUBnbWFpbC5jb20iLCJ1aWQiOiJiN0daWHFrU1FLYm1lbkx1M2hyQ1J5SERldWUyIn0sImlhdCI6MTU2NjMzMzEwMCwiZXhwIjoxNTY2MzUxMTAwfQ.K8ImHnJP8k2TFBbdLPkEPuyDBo3tMjQVuWpA3pJwSJk',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'Content-Type': 'application/json; charset=UTF-8'\r\n    }\r\n  }\r\n\r\n  public get(url: string, onSuccess: Function, onError?: Function): void {\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: this.headers\r\n    }).then((response: any) => {\r\n      if(response.ok) {\r\n        return response.json();         \r\n      }\r\n      throw response.json();\r\n    }).then((data: any) => {\r\n      onSuccess(data);\r\n    }).catch((errorCallback: any) => {\r\n      if ((errorCallback + '') !== 'TypeError: Failed to fetch') {\r\n        errorCallback.then((error: any) => {\r\n          if (onError) {\r\n            onError(error);\r\n          }\r\n        });\r\n      } else {\r\n        if (onError) {\r\n          onError(errorCallback);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public post(url: string, params: any, onSuccess: Function, onError?: Function): void {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify(params)\r\n    }).then((response: any) => {\r\n      if(response.ok) {\r\n        return response.json();         \r\n      }\r\n      throw response.json();\r\n    }).then((data: any) => {\r\n      onSuccess(data);\r\n    }).catch((errorCallback: any) => {\r\n      if ((errorCallback + '') !== 'TypeError: Failed to fetch') {\r\n        errorCallback.then((error: any) => {\r\n          if (onError) {\r\n            onError(error);\r\n          }\r\n        });\r\n      } else {\r\n        if (onError) {\r\n          onError(errorCallback);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public put(url: string, params: any, onSuccess: Function, onError?: Function): void {\r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: this.headers,\r\n      body: JSON.stringify(params)\r\n    }).then((response: any) => {\r\n      if(response.ok) {\r\n        return response.json();         \r\n      }\r\n      throw response.json();\r\n    }).then((data: any) => {\r\n      onSuccess(data);\r\n    }).catch((errorCallback: any) => {\r\n      if ((errorCallback + '') !== 'TypeError: Failed to fetch') {\r\n        errorCallback.then((error: any) => {\r\n          if (onError) {\r\n            onError(error);\r\n          }\r\n        });\r\n      } else {\r\n        if (onError) {\r\n          onError(errorCallback);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public delete(url: string, onSuccess: Function, onError?: Function): void {\r\n    fetch(url, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    }).then((response: any) => {\r\n      if(response.ok) {\r\n        return response.json();         \r\n      }\r\n      throw response.json();\r\n    }).then((data: any) => {\r\n      onSuccess(data);\r\n    }).catch((errorCallback: any) => {\r\n      if ((errorCallback + '') !== 'TypeError: Failed to fetch') {\r\n        errorCallback.then((error: any) => {\r\n          if (onError) {\r\n            onError(error);\r\n          }\r\n        });\r\n      } else {\r\n        if (onError) {\r\n          onError(errorCallback);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default PetitionService;\r\n","export class UserDataModel {\r\n\r\n  uid: string;\r\n  email: string;\r\n  name: string;\r\n  photo: string;\r\n\r\n  constructor(data: any | UserDataModel) {\r\n    this.uid = '';\r\n    this.email = '';\r\n    this.name = '';\r\n    this.photo = '';\r\n\r\n    Object.assign(this, data);\r\n  }\r\n}","import { combineReducers } from 'redux';\nimport { reducerForm } from '../imports/react-redux.import';\nimport { userData, statusLogin } from '../core/reducers/user-data.reducers';\n\nexport const reducers = combineReducers({\n  form: reducerForm,\n  userData,\n  statusLogin\n});\n\nexport const initState = {\n  userData: null,\n  statusLogin: false\n};","import { Action } from '../interfaces/action.interface';\r\nimport { UserDataReducerEnum } from '../enums/user-data-reducer.enum';\r\n\r\nexport const userData = (state = {}, action: Action) => {\r\n  switch(action.type) {\r\n    case UserDataReducerEnum.SET_USER_DATA: return action.payload;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const statusLogin = (state = {}, action: Action) => {\r\n  switch(action.type) {\r\n    case UserDataReducerEnum.SET_STATUS_LOGIN: return action.payload;\r\n    default: return state;\r\n  }\r\n}","import { \r\n  faPlusCircle,\r\n  faAddressCard,\r\n  faAddressBook,\r\n  faTimes,\r\n  faUserCircle,\r\n  faUserPlus,\r\n  faUndo,\r\n  faSpinner,\r\n  faSignOutAlt,\r\n  faCalculator,\r\n  faFileInvoice,\r\n  faTrash\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst icons: any = [ \r\n  faPlusCircle,\r\n  faAddressCard,\r\n  faAddressBook,\r\n  faTimes,\r\n  faUserCircle,\r\n  faUserPlus,\r\n  faUndo,\r\n  faSpinner,\r\n  faSignOutAlt,\r\n  faCalculator,\r\n  faFileInvoice,\r\n  faTrash\r\n];\r\n\r\nexport default icons;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { reducers, initState } from '../declarations/redux.declarations';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport icons from '../declarations/fontawesome.declarations';\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB8lK-S0bBMq2CnHj_1uR46G0D-eIJR93c\",\r\n  authDomain: \"budget-develop-2cb3c.firebaseapp.com\",\r\n  databaseURL: \"https://budget-develop-2cb3c.firebaseio.com\",\r\n  projectId: \"budget-develop-2cb3c\",\r\n  storageBucket: \"budget-develop-2cb3c.appspot.com\",\r\n  messagingSenderId: \"344892035551\",\r\n  appId: \"1:344892035551:web:f9560ed3de45962033f46a\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n\r\n//REDUX\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, initState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n//FONT AWESOME\r\nlibrary.add(icons);","import firebase from '../../config/app.config';\r\n\r\nclass Firebase {\r\n\r\n  //REGIST AND LOGIN WHIT EMAIL\r\n  public createUserWithEmailAndPassword(email: string, password: string, onRegist: Function, onError?: Function | undefined): void {\r\n    let errorCode: string = '';\r\n    let errorMessage: string = '';\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch((error: any) => {\r\n      errorCode = error.code;\r\n      errorMessage = error.message;\r\n\r\n      if (onError) {\r\n        onError(errorCode, errorMessage);\r\n      }\r\n    }).then(() => {\r\n      if (!errorCode) {\r\n        firebase.auth().onAuthStateChanged((user: any) => {\r\n          if (user) {\r\n            onRegist(user);\r\n          } else {\r\n            onRegist(null);\r\n          }\r\n\r\n          firebase.auth().signOut().then(\r\n            () => {}\r\n          ).catch(\r\n            (error: any) => {}\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public signInWithEmailAndPassword(email: string, password: string, onLogIn: Function, onError?: Function | undefined): void {\r\n    let errorCode: string = '';\r\n    let errorMessage: string = '';\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(email, password).catch((error: any) => {\r\n      errorCode = error.code;\r\n      errorMessage = error.message;\r\n\r\n      if (onError) {\r\n        onError(errorCode, errorMessage);\r\n      }\r\n    }).then(() => {\r\n      if (!errorCode) {\r\n        firebase.auth().onAuthStateChanged((user: any) => {\r\n          if (!errorCode) {\r\n            onLogIn(user);\r\n          } \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public sendPasswordResetEmail(email: string, onSendMail: Function, onError?: Function) {\r\n    firebase.auth().sendPasswordResetEmail(email).then(() => {\r\n      onSendMail();\r\n    }).catch((error: any) => {\r\n      if (onError) {\r\n        onError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  //REGIST AND LOGIN WHIT GMAIL\r\n  public signInWithGooglePopup(onSignIn: Function, onError?: Function | undefined): void {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase.auth().signInWithPopup(provider).then((result: any) => {\r\n      const token = result.credential.accessToken;\r\n      const user = result.user;\r\n      onSignIn(token, user);\r\n    }).catch((error: any) => {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      if (onError) {\r\n        onError(errorCode, errorMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n  public signOut(onSignOut: Function, onError?: Function | undefined): void {\r\n    firebase.auth().signOut().then(() => {\r\n      onSignOut();\r\n    }).catch((error: any) => {\r\n      if (onError) {\r\n        onError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  //CALL DATA\r\n  public on(path: string, onFunction: Function): void {\r\n    firebase.database().ref().child(path).on('value',(snapshot: any) => {\r\n      onFunction(snapshot);\r\n    });\r\n  }\r\n\r\n  public once(path: string, onFunction: Function): void {\r\n    firebase.database().ref().child(path).once('value',(snapshot: any) => {\r\n      onFunction(snapshot);\r\n    });\r\n  }\r\n\r\n  public remove(path: string, errorFunction?: Function | undefined): void {\r\n    firebase.database().ref().child(path).remove((error: any) => {\r\n      if (errorFunction) {\r\n        errorFunction(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  public update(path: string, data: any, errorFunction?: Function | undefined): void {\r\n    firebase.database().ref(path).update(data,(error: any) => {\r\n      if (errorFunction) {\r\n        errorFunction(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  public set(path: string,data: any, errorFunction?: Function | undefined): void {\r\n    firebase.database().ref(path).set(data,(error: any) => {\r\n      if (errorFunction) {\r\n        errorFunction(error);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default Firebase;","import PetitionService from \"./petition\";\r\nimport { UserDataModel } from \"../models/user-data.model\";\r\nimport Cookies from 'js-cookie';\r\nimport Firebase from '../../shared/firebase/firebase.shared';\r\n\r\nclass UserService {\r\n\r\n  private petition: PetitionService;\r\n  private baseUrl: string;\r\n  private firebase: Firebase;\r\n\r\n  constructor() {\r\n    this.petition = new PetitionService();\r\n    this.baseUrl = this.petition.baseUrl;\r\n    this.firebase = new Firebase();\r\n  }\r\n\r\n  public login(email: string, password: string, onSuccess: Function, onError: Function): void {\r\n    this.firebase.signInWithEmailAndPassword(email, password, (userData: any) => {\r\n      if (userData.uid) {\r\n        this.firebase.once(`users/${userData.uid}`, (snapshot: any) => {\r\n          const { uid, email, name, photo } = snapshot.val();\r\n\r\n          const userDataFinal = new UserDataModel({\r\n            uid,\r\n            email,\r\n            name,\r\n            photo\r\n          });\r\n\r\n          Cookies.set('userData', JSON.stringify({ email, password }));\r\n          onSuccess(userDataFinal);\r\n        });      \r\n      }\r\n    }, (errorCode: any) => {\r\n      let error = 'Hubo un error al iniciar sesión.';\r\n      \r\n      switch (errorCode) {\r\n        case 'auth/user-not-found':\r\n          error = 'El usuario ingresado no esta registrado.'\r\n        break;\r\n\r\n        case 'auth/wrong-password': \r\n          error = 'El usuario o contraseña ingresados son incorrectos.'\r\n        break;\r\n      }\r\n\r\n      onError(error);\r\n    });\r\n  }\r\n\r\n  public recoverPassword(email: string, onSendMail: Function, onError: Function) {\r\n    this.firebase.sendPasswordResetEmail(email, () => {\r\n      onSendMail(email);\r\n    }, (error: any) => {\r\n      if (error.toString().includes('There is no user record corresponding to this identifier')) {\r\n        onError('El usuario a recuperar no esta registrado.');\r\n      } else {\r\n        onError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  public registerUser(userData: any, onSuccess: Function, onError: Function): void {  \r\n    this.firebase.createUserWithEmailAndPassword(userData.email, userData.password, (user: any) => {\r\n      const userDataFinal = new UserDataModel({\r\n        uid: user.uid,\r\n        email: userData.email,\r\n        name: userData.name,\r\n        photo: userData.img\r\n      });\r\n      \r\n      this.firebase.update(`users/${user.uid}`, userDataFinal);\r\n      Cookies.set('userData', JSON.stringify({ email: userData.email, password: userData.password }));\r\n      onSuccess(userDataFinal);\r\n    }, (errorCode: any, errorMessage: any) => {\r\n      if (errorMessage === 'The email address is already in use by another account.') {\r\n        onError('La dirección de correo electrónico ya está en uso por otra cuenta.');\r\n      } else {\r\n        onError(errorMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default UserService;","import Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nconst swal = withReactContent(Swal);\n\nexport const toast = (iconType: \"success\" | \"error\" | \"warning\" | \"info\" | \"question\" , title: string) => {\n  const Toast = swal.mixin({\n    toast: true,\n    position: 'bottom-end',\n    showConfirmButton: false,\n    timer: 3000\n  });\n\n  Toast.fire({\n  type: iconType,\n  title: title\n  });\n}\n\nexport const alert = (iconType: \"success\" | \"error\" | \"warning\" | \"info\" | \"question\", title: string, text: string) => {\n  Swal.fire({\n    type: iconType,\n    title,\n    text\n  });\n}","import { Action } from '../interfaces/action.interface';\r\nimport { UserDataReducerEnum } from '../enums/user-data-reducer.enum';\r\nimport UserService from '../http/user.service';\r\nimport { UserDataModel } from '../models/user-data.model';\r\nimport { alert, toast } from '../../shared/swal/swal.shared';\r\n\r\nconst userService = new UserService();\r\n\r\nexport function setUserData(payload: any): Action {\r\n  if(!payload) {\r\n    toast('info', 'Cerraste sesión cerrada');\r\n  }\r\n  return { type: UserDataReducerEnum.SET_USER_DATA, payload };\r\n}\r\n\r\nexport function setLoginStatus(payload: any): Action {\r\n  return { type: UserDataReducerEnum.SET_STATUS_LOGIN, payload };\r\n}\r\n\r\nexport function login(email:string, password: string): Function {\r\n  return async (dispatch: Function) => {\r\n    dispatch(setLoginStatus(true));\r\n    userService.login(email, password, \r\n      (userData: UserDataModel) => {\r\n        dispatch(setLoginStatus(false));\r\n        dispatch(setUserData(userData));\r\n        toast('success', `Bienvenid@ ${userData.email}`);\r\n      }, (errorMessage: any) => {\r\n        dispatch(setLoginStatus(false));\r\n        dispatch(setUserData(null));\r\n        alert('error', 'Upps...', errorMessage);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function logout(name:string): Function {\r\n  return async (dispatch: Function) => {\r\n    dispatch(setUserData(null));\r\n    toast('info', `Hasta pronto ${name}`);\r\n  }\r\n}\r\n\r\nexport function registerUser(userRegist: any) {\r\n  return async (dispatch: Function) => {\r\n    dispatch(setLoginStatus(true));\r\n    userService.registerUser(userRegist,\r\n      (userData: UserDataModel) => {\r\n        dispatch(setLoginStatus(false));\r\n        dispatch(setUserData(userData));\r\n        alert('success', 'Genial!!', `El usuario fue registrado con el correo: ${userData.email}`);\r\n      }, (error: any) => {\r\n        dispatch(setLoginStatus(false));\r\n        dispatch(setUserData(null));\r\n        alert('error', 'Upps...', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function recoverPassword(email: string) {\r\n  return async (dispatch: Function) => { \r\n    userService.recoverPassword(email, (sendMail: string) => {\r\n      alert('success', 'Genial!!', `Se envio un correo a: ${sendMail} para recuperar la contraseña`);\r\n    }, (error: any) => {\r\n      alert('error', 'Upps...', error);\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport const LoadingIndicatorComponent = () => {\r\n  return (\r\n    <Row className=\"justify-content-md-center mb-3 mt-4\">\r\n      <Col md={ 1 }>\r\n        <FontAwesomeIcon className=\"spinner\" icon=\"spinner\" size=\"2x\" color=\"#17a2b8\" spin/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}","export enum FormRecoverPasswordReducerEnum {\n  FORM_RECOVER_PASSWORD_SUBMIT = 'FormRecoverPasswordSubmit'\n}","import React, { ReactElement } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface Props { \r\n  title: string;\r\n  modalShow: boolean;\r\n  body: ReactElement;\r\n  onHide: Function;\r\n  size: 'sm' | 'lg' | 'xl';\r\n}\r\n\r\nexport const ModalComponent = ({ title, modalShow, onHide, body, size }: Props) => {\r\n  return (\r\n    <Modal\r\n      size={ size }\r\n      show={ modalShow }\r\n      onHide={ () => onHide() }\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          { title }\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n      <Modal.Body>\r\n        { body }\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport const ModalCenteredComponent = ({ title, modalShow, onHide, body, size }: Props) => {\r\n  return (\r\n    <Modal\r\n      size={ size }\r\n      show={ modalShow }\r\n      onHide={ () => onHide() }\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          { title }\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n      <Modal.Body>\r\n        { body }\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}","export enum FormCreateBudgetReducerEnum {\n  FORM_CREATE_BUDGET_SUBMIT = 'FormCreateBudgetSubmit'\n}","import React, { Component } from 'react';\nimport { Field, reduxForm } from '../../../imports/react-redux.import';\nimport { renderTextField } from '../../../shared/redux-form/redux-render-fields.shared';\nimport { FormRecoverPasswordReducerEnum } from '../../../core/enums/form-recover-password-reducer.enum';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './form-recover-password.css';\n\ninterface Props { \n  initialValues: any;\n  handleSubmit: any;\n  cancel: any;\n  submitting: any;\n  submitActions: Function;\n}\n\ninterface State { }\n\nclass FormRecoverPasswordComponent extends Component<Props, State> {\n  render() {\n    const { handleSubmit, cancel, submitting, submitActions } = this.props;\n    \n    return (\n      <form onSubmit={ handleSubmit(submitActions) }>\n        <Field \n          className=\"form-control\"\n          name=\"email\"\n          component={ renderTextField }\n          label=\"Correo electronico\"\n          type=\"email\"\n        />\n\n        <div className=\"text-right\">\n          <Button \n            type=\"submit\" \n            disabled={ submitting }\n            variant=\"info\"\n          >\n            <FontAwesomeIcon icon=\"undo\" />\n            &nbsp;\n            Recuperar contraseña\n          </Button>\n\n          <Button \n            className=\"ml-3\"\n            onClick={ cancel }\n            variant=\"danger\"\n          >\n            <FontAwesomeIcon icon=\"times\" />\n            &nbsp;\n            Cancelar\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst validate = (values: any) => {\n  const errors = {\n    email: ''\n  }\n  \n  if (!values.email) {\n    errors.email = 'El campo de correo electronico es requerido.';\n  }\n\n  return errors\n}\n\nexport default reduxForm({\n  form: FormRecoverPasswordReducerEnum.FORM_RECOVER_PASSWORD_SUBMIT,\n  validate\n})(FormRecoverPasswordComponent);","import React, { Component } from 'react';\r\nimport { connect } from '../../imports/react-redux.import';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport FormRegistComponent from './form-regist/form-regist.component';\r\nimport FormLoginComponent from './form-login/form-login.component';\r\nimport { login, registerUser, recoverPassword } from '../../core/actions/user-data.actions';\r\nimport { UserDataModel } from '../../core/models/user-data.model';\r\nimport { LoadingIndicatorComponent } from '../../shared/loading-indicator/loading-indicator';\r\nimport { ModalCenteredComponent } from '../../shared/modal/modal.component';\r\nimport FormRecoverPasswordComponent from './form-recover-password/form-recover-password.component';\r\n\r\ninterface Props {\r\n  login: Function;\r\n  registerUser: Function;\r\n  recoverPassword: Function;\r\n  userData: UserDataModel;\r\n  statusLogin: boolean;\r\n}\r\n\r\ninterface State { \r\n  showRegist: boolean;\r\n  showRecover: boolean;\r\n}\r\n\r\nclass LoginView extends Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showRegist: false,\r\n      showRecover: false\r\n    }\r\n  }\r\n\r\n  private showRegistModel() {\r\n    const { showRegist } = this.state;\r\n    this.setState({ showRegist: !showRegist });\r\n  }\r\n\r\n  private recoverPasswordModal(formData: any) {\r\n    const { recoverPassword } = this.props;\r\n    recoverPassword(formData.email); \r\n    this.setState({ showRecover: false })\r\n  }\r\n\r\n  render() {\r\n    const { login, statusLogin, registerUser } = this.props;\r\n    const { showRegist, showRecover } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <ModalCenteredComponent \r\n          title=\"Recuperar contraseña\"\r\n          modalShow={ showRecover }\r\n          body={ \r\n            <FormRecoverPasswordComponent \r\n              submitActions={ (formData: any) => this.recoverPasswordModal(formData) }\r\n              cancel={ () => this.setState({ showRecover: false }) }\r\n            /> \r\n          }\r\n          onHide={ () => this.setState({ showRecover: false }) }\r\n          size=\"lg\"\r\n        />\r\n\r\n        <Row className=\"justify-content-md-center mt-5\">\r\n          <Col md={ 4 }>\r\n            <Card>\r\n              <Card.Body>\r\n                {\r\n                  showRegist ? \r\n                    <FormRegistComponent \r\n                      submitActions={ (formData: any) => registerUser(formData) }\r\n                      cancel={ () => this.showRegistModel() }\r\n                      showButtons={ !statusLogin }\r\n                    />\r\n                  :\r\n                    <FormLoginComponent \r\n                      submitActions={ (formData: any) => login(formData.email, formData.password) }\r\n                      cancel={ () => this.showRegistModel() }\r\n                      showButtons={ !statusLogin }\r\n                      recoverPassword={ () => this.setState({ showRecover: true }) }\r\n                    />\r\n                }\r\n                {\r\n                  statusLogin && \r\n                    <LoadingIndicatorComponent />\r\n                }\r\n              </Card.Body>\r\n            </Card>  \r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  statusLogin: state.statusLogin\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  login: (email: string, password: string) => dispatch(login(email, password)),\r\n  registerUser: (userRegist: any) => dispatch(registerUser(userRegist)),\r\n  recoverPassword: (email: any) => dispatch(recoverPassword(email))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);","import React, { Component } from 'react';\nimport { connect } from '../../imports/react-redux.import';\nimport { UserDataModel } from '../../core/models/user-data.model';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { logout } from '../../core/actions/user-data.actions';\n\ninterface Props { \n  userData: UserDataModel;\n  logout: Function;\n}\n\ninterface State { }\n\nclass HeaderView extends Component<Props, State> {\n  render() {\n    const { userData, logout } = this.props;\n\n    return (\n      <>\n        <header>\n          <Row>\n            <Col className=\"mt-1\" md={ 11 }>\n              <h4>Bienvenid@ { userData.name }</h4>\n            </Col>\n\n            <Col md={ 1 }>\n              <Button \n                onClick={ () => logout(userData.name) }\n                variant=\"outline-dark\"\n              >\n                <FontAwesomeIcon icon=\"sign-out-alt\" />\n                &nbsp;\n                Salir\n              </Button>\n            </Col>\n          </Row>\n        </header>\n        <br/><br/><br/>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({ \n  userData: state.userData\n});\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  logout: (name: string) => dispatch(logout(name))\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HeaderView);","import React, { Component } from 'react';\nimport { Card, Col, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './card-budget.css';\n\ninterface Props { }\n\ninterface State { }\n\nclass CardBudgetComponent extends Component<Props, State> {\n  render() {\n    return (\n      <Col className=\"ml-3 mr-3 mt-3 mb-3\" md={ 3 }>\n        <Card className=\"card-budget\">\n          <Card.Header className=\"text-right\">\n            <Button \n              className=\"btn btn-circle btn-lg\" \n              variant=\"outline-danger\"\n            >\n              <FontAwesomeIcon icon=\"trash\" />\n            </Button>\n          </Card.Header>\n          <Card.Body>\n            <Card.Title>\n              Nuevo presupuesto\n            </Card.Title>\n\n            <Card.Subtitle \n              className=\"mb-2 text-muted\"\n            >\n              Ver el presupuesto de 09/07/2019\n            </Card.Subtitle>\n\n            <Card.Text className=\"text-center mt-4\">\n              <Button \n                variant=\"outline-info\"\n                className=\"btn btn-circle btn-xl\">\n                  <FontAwesomeIcon icon=\"file-invoice\" />\n              </Button>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default CardBudgetComponent;","import React, { Component } from 'react';\nimport { Field, reduxForm } from '../../../imports/react-redux.import';\nimport { renderTextField } from '../../../shared/redux-form/redux-render-fields.shared';\nimport { FormCreateBudgetReducerEnum } from '../../../core/enums/form-create-budget-reducer.enum';\nimport './form-create-budget.css';\n\ninterface Props { \n  initialValues: any;\n  handleSubmit: any;\n  cancel: any;\n  submitting: any;\n  submitActions: Function;\n}\n\ninterface State { }\n\nclass FormCreateBudgetComponent extends Component<Props, State> {\n  render() {\n    const { handleSubmit, cancel, submitting, submitActions } = this.props;\n    \n    return (\n      <form onSubmit={ handleSubmit(submitActions) }>\n        <Field \n          className=\"form-control\"\n          name=\"name\"\n          component={ renderTextField }\n          label=\"Nombre\"\n        />\n\n        <Field \n          className=\"form-control\"\n          name=\"date\"\n          component={ renderTextField }\n          label=\"Fecha de creación\"\n        />\n\n        <button \n          type=\"submit\" \n          disabled={ submitting }\n        >\n          Save\n        </button>\n\n        <button \n          onClick={ cancel }\n        >\n          Cancel\n        </button>\n      </form>\n    );\n  }\n}\n\nconst validate = (values: any) => {\n  const errors = {\n    example: ''\n  }\n  \n  if (!values.example) {\n    errors.example = 'example is requiered';\n  }\n\n  return errors\n}\n\nexport default reduxForm({\n  form: FormCreateBudgetReducerEnum.FORM_CREATE_BUDGET_SUBMIT,\n  validate\n})(FormCreateBudgetComponent);","import React, { Component } from 'react';\nimport { Card, Col, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './add-budget.css';\nimport { ModalComponent } from '../../../shared/modal/modal.component';\nimport FormCreateBudgetComponent from '../form-create-budget/form-create-budget.component';\n\ninterface Props { }\n\ninterface State { \n  showModal: boolean;\n}\n\nclass AddBudgetComponent extends Component<Props, State> {\n  \n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      showModal: false\n    }\n  }\n  \n  render() {\n    const { showModal } = this.state;\n\n    return (\n      <>\n        <ModalComponent \n          title=\"Nuevo presupuesto\"\n          modalShow={ showModal }\n          body={ \n            <FormCreateBudgetComponent \n              handleSubmit={ () => {} }\n            /> \n          }\n          onHide={ () => this.setState({ showModal: !showModal }) }\n          size=\"xl\"\n        />\n\n        <Col className=\"ml-3 mr-3 mt-3 mb-3\" md={ 3 }>\n          <Card className=\"card-add\">\n            <Card.Body>\n              <Card.Title>\n                Nuevo presupuesto\n              </Card.Title>\n\n              <Card.Subtitle \n                className=\"mb-2 text-muted\"\n              >\n                Crea un nuevo presupuesto\n              </Card.Subtitle>\n\n              <Card.Text className=\"text-center mt-5\">\n                <Button \n                  variant=\"outline-success\"\n                  className=\"btn btn-circle btn-xl\"\n                  onClick={ () => this.setState({ showModal: true }) }\n                >\n                    <FontAwesomeIcon icon=\"calculator\" />\n                </Button>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default AddBudgetComponent;","import React, { Component } from 'react';\nimport { connect } from '../../imports/react-redux.import';\nimport { UserDataModel } from '../../core/models/user-data.model';\nimport HeaderView from '../header/header.view';\nimport { Container, Row } from 'react-bootstrap';\nimport CardBudgetComponent from './card-budget/card-budget.component';\nimport AddBudgetComponent from './add-budget/add-budget.component';\n\ninterface Props { }\n\ninterface State { }\n\nclass HomeView extends Component<Props, State> {\n  render() {\n    return (\n      <>\n        <HeaderView />\n        \n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <AddBudgetComponent />\n            <CardBudgetComponent />\n            <CardBudgetComponent />\n            <CardBudgetComponent />\n            <CardBudgetComponent />\n            <CardBudgetComponent />\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({ });\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  //getExamepleGlobalAction: (exampleParam: any) => dispatch(getExamepleGlobalAction(exampleParam))\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeView);","import React, { Component } from 'react';\r\nimport { connect } from '../imports/react-redux.import';\r\nimport LoginView from './login/login.view';\r\nimport { UserDataModel } from '../core/models/user-data.model';\r\nimport HomeView from './home/home.view';\r\nimport { login } from '../core/actions/user-data.actions';\r\nimport Cookies from 'js-cookie';\r\n\r\ninterface Props { \r\n  userData: UserDataModel;\r\n  login: Function;\r\n}\r\n\r\ninterface State { }\r\n\r\nclass App extends Component<Props, State> {\r\n\r\n  componentDidMount() {\r\n    const userData: any = Cookies.getJSON('userData');\r\n    const { login } = this.props;\r\n\r\n    if (userData) {\r\n      login(userData.email, userData.password);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userData } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {\r\n          userData ?\r\n            <HomeView /> \r\n          :\r\n            <LoginView /> \r\n        }\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  userData: state.userData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  login: (user: string, password: string) => dispatch(login(user, password))\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from './imports/react-redux.import';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './modules/app';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './config/app.config';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/stylesheet/index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();"],"sourceRoot":""}